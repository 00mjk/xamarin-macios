# Xamarin
#
# The following templates contains all the different steps that can be used to consume the tests results from a 
# matrix job and will unzip the pipeline artifacts and upload the results to VSTS 
#
# The template takes the following env vars
#
# CONTEXT: The context that is used to set the status of the commit.

steps:
###
### Download all test summaries
###

- task: DownloadPipelineArtifact@2
  displayName: Download test summaries
  inputs:
    patterns: '**/TestSummary*'
    allowFailedBuilds: true
    path: $(Pipeline.Workspace)/Summaries

- bash: |
    set -x
    set -e
    ls -la
    pwd
    cat $PIPELINE_WORKSPACE/s/TestSummary-*.md >> ./TestSummary.md
    cat ./TestSummary.md
  displayName: 'Merge TestSummary files'

###
### Publish merged TestSummary file
###
- task: PublishPipelineArtifact@1
  displayName: 'Publish Artifact: Aggregate TestSummary'
  inputs:
#    targetPath: 'xamarin-macios/tests/TestSummary.md'
    targetPath: ./TestSummary.md
    artifactName: TestSummary
    continueOnError: true

###
### Report final results to GitHub
###
# - task: PowerShell@2
#   inputs:
#     targetType: #filePath
#     script: @json_payload = @"{"token": $TOKEN, "target": $TARGET_URL}"

# pwsh for PowerShell Core
# powershell is for Win PowerShell
- pwsh: publish_results.ps1


# 	printf "\t\"state\": \"%s\",\n" "$STATE"
#	printf "\t\"target_url\": \"%s\",\n" "$TARGET_URL"
#	printf "\t\"description\": %s,\n" "$(echo -n "$DESCRIPTION" | python -c 'import json,sys; print(json.dumps(sys.stdin.read()))')"
#	printf "\t\"context\": \"%s\"\n" "$CONTEXT"
# ./jenkins/add-commit-status.sh --token="$TOKEN" --hash="$BUILD_REVISION" --state="$GH_STATE" --target-url="$VSTS_BUILD_URL" --description="$DESCRIPTION" --context="VSTS: device tests ($DEVICE_TYPE)"


###
### Report final results to GitHub
###

- bash: ./jenkins/vsts-device-tests-set-status.sh "--token=$(GitHub.Token)" --device="VSTS-DDFun"
  displayName: Report results to GitHub as comment / status
  continueOnError: true
  condition: succeededOrFailed()
